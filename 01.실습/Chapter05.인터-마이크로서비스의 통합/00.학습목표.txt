1) 인터-마이크로서비스의 통합 1: Request-Response 방식
  •Request-Response 방식의 연동 (REST + Sync + Orchestration) 
  •트랜잭션 이슈: 2PC or Shared-Database and schema per service
  •추적 이슈: 분산 추척을 통한 오류 점검 방법, Istio 예거와 kiali 사용 방법
  •성능 이슈: 장애전파 상황 그리고 Istio 의 Circuit Breaker, Rate Limiting를 통한 회피


2) 인터-마이크로서비스의 통합 2: Event-driven 방식
  •Event-driven 방식의 연동 (Pub/Sub + Async + Choreography)

  •EDA 에서의 분산 큐의 역할과 Kafka 의 장점
  •Kafka 의 설치와 클라이언트 도구를 통한 Pub/Sub 실습
  •이벤트의 퍼블리싱 – 어그리게이트 내의 엔티티에 JPA 어노테이션 주입 방법, Spring Cloud Streams 를 통한 이벤트 퍼블리시
  •이벤트의 서브스크립션 - Spring Cloud Streams 와 Kafka client 를 통한 이벤트의 수신과 처리, Acknowledge
  •트랜잭션 이슈: Eventual Transaction 와 Saga, Compensation
  •실습 통한 성능의 장점 이해 :  Time-decoupling 과  Non-blocking 속성

  
3) 데이터 프로젝션
  •Join SQL 를 회피하고, 데이터를 취합하여 보여주는 전략 3가지:  by UI, by Composite-service, by CQRS
  •Composite-Service 구현방법:  동시 REST 호출 or API GW (GraphQL) 사용
  •CQRS 구현방법

  
 

