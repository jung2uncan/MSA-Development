{"ast":null,"code":"import _asyncToGenerator from \"/home/project/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import HelloWorld from './components/HelloWorld';\nimport ShoppingOrder from './components/ShoppingOrder'; //axios 라이브러리를 가져오기 위함. (터미널창에서 npm install axios 으로 다운 필요)\n\nvar axios = require('axios').default;\n\nexport default {\n  name: 'App',\n  components: {\n    ShoppingOrder: ShoppingOrder\n  },\n  data: function data() {\n    return {\n      //상품정보\n      //products:[],\n      //주문정보\n      orders: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var temp;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('https://8088-labs--317592847.kuberez.io/orders');\n\n            case 2:\n              temp = _context.sent;\n              //console.log(temp.data._embedded.products)\n              //this.products = temp.data._embedded.products;\n              console.log(temp.data._embedded.orders);\n              _this.orders = temp.data._embedded.orders;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA,uD,CAEA;;AACA;;AAEA;AACAA,aADA;AAGAC;AACAC;AADA,GAHA;AAOAC;AAAA;AACA;AACA;AAEA;AACAC;AALA;AAAA,GAPA;AAeAC,SAfA,qBAeA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAC,2DAFA;;AAAA;AAEAC,kBAFA;AAIA;AACA;AAEAC;AACA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AA1BA","names":["name","components","ShoppingOrder","data","orders","created","axios","temp","console"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      app\n      color=\"primary\"\n      dark\n    >\n      <div class=\"d-flex align-center\">\n        <v-img\n          alt=\"Vuetify Logo\"\n          class=\"shrink mr-2\"\n          contain\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-logo-dark.png\"\n          transition=\"scale-transition\"\n          width=\"40\"\n        />\n\n        <v-img\n          alt=\"Vuetify Name\"\n          class=\"shrink mt-1 hidden-sm-and-down\"\n          contain\n          min-width=\"100\"\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-name-dark.png\"\n          width=\"100\"\n        />\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        href=\"https://github.com/vuetifyjs/vuetify/releases/latest\"\n        target=\"_blank\"\n        text\n      >\n        <span class=\"mr-2\">Latest Release</span>\n        <v-icon>mdi-open-in-new</v-icon>\n      </v-btn>\n    </v-app-bar>\n\n    <v-main>\n\n       <shoppingOrder :order=\"order\" v-for=\"(order, index) in orders\" v-bind:key=\"index\"/>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n//import HelloWorld from './components/HelloWorld';\nimport ShoppingOrder from './components/ShoppingOrder'\n\n//axios 라이브러리를 가져오기 위함. (터미널창에서 npm install axios 으로 다운 필요)\nconst axios = require('axios').default;\n\nexport default {\n  name: 'App',\n\n  components: {\n   ShoppingOrder\n  },\n\n  data: () => ({\n    //상품정보\n    //products:[],\n\n    //주문정보\n    orders: []\n  }),\n\n  async created() {\n      //Axios : Vue에서 권고하는 브라우저, Node.js를 위한 Promise API를 활용하는 HTTP 비동기 통신 라이브러리\n      var temp = await axios.get('https://8088-labs--317592847.kuberez.io/orders')\n\n      //console.log(temp.data._embedded.products)\n      //this.products = temp.data._embedded.products;\n      \n      console.log(temp.data._embedded.orders)\n      this.orders = temp.data._embedded.orders;\n\n\n  }\n};\n</script>\n\n\n//주문하기 : http http://localhost:8088/orders productId=3"]},"metadata":{},"sourceType":"module"}